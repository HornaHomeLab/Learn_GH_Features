on:
  workflow_call:
    inputs:
      version_tag:
        type: string
        required: true
      pre_release:
        type: string
        required: true



jobs:
  Create_Release:
    runs-on: container
    steps:
      - name: Check if Release ${{ inputs.version_tag }} exists
        id: release-check
        run: |
          release_tag_name=$(curl -L -s --fail-with-body \
            -X GET \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/repos/${{ github.repository }}/releases/tags/${{ inputs.version_tag }} \
            | jq .tag_name)

            echo "$release_tag_name"

            if [ "${{ inputs.version_tag }}" == $release_tag_name ]; then
              echo "Release exists"
              echo "exist=true" >> $GITHUB_OUTPUT
            else
              echo "Release does not exist"
              echo "exist=false" >> $GITHUB_OUTPUT
            fi

      - name: Create Release ${{ inputs.version_tag }}
        if: steps.release-check.outputs.exist == 'false'
        id: new-release
        run: |
          curl -L -s --fail-with-body \
            -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            --url https://api.github.com/repos/${{ github.repository }}/releases \
            -d '{
              "tag_name":"${{ inputs.version_tag }}",
              "name":"${{ inputs.version_tag }} Release",
              "body":"Description of the release",
              "draft":false,
              "prerelease":${{ inputs.pre_release }},
              "generate_release_notes":false
            }'

      - name: Update Release ${{ inputs.version_tag }}
        if: steps.release-check.outputs.exist == 'true'
        run: |
          curl -L -s --fail-with-body \
            -X PATCH \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            --url https://api.github.com/repos/${{ github.repository }}/releases \
            -d '{
              "tag_name":"${{ inputs.version_tag }}",
              "name":"${{ inputs.version_tag }} Release",
              "body":"Description of the release",
              "draft":false,
              "prerelease":${{ inputs.pre_release }},
              "generate_release_notes":false
            }'